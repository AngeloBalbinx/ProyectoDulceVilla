package vista;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import entidad.Cliente;
import mantenimiento.GestionClienteDAO;

import javax.swing.JTable;
import javax.swing.JScrollPane;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class DlgCliente extends JDialog implements ActionListener {
	

	private final JPanel contentPanel = new JPanel();
	private JTable tbCliente;
	DefaultTableModel model = new DefaultTableModel();
	GestionClienteDAO gCli = new GestionClienteDAO();
	private JButton okButton;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			DlgCliente dialog = new DlgCliente();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public DlgCliente() {
		setBounds(100, 100, 450, 300);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		{
			JScrollPane scrollPane = new JScrollPane();
			scrollPane.setBounds(10, 11, 414, 206);
			contentPanel.add(scrollPane);
			{
				tbCliente = new JTable();
				scrollPane.setViewportView(tbCliente);
				tbCliente.setFillsViewportHeight(true);
			}
		}
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				okButton = new JButton("OK");
				okButton.addActionListener(this);
				okButton.setActionCommand("OK");
				buttonPane.add(okButton);
				getRootPane().setDefaultButton(okButton);
			}
			{
				JButton cancelButton = new JButton("Cancel");
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}
		}
		// Agregar columnas
		model.addColumn("Codigo");
		model.addColumn("Nombres");
		model.addColumn("Apellido");
		tbCliente.setModel(model);
		cargarDataClientes();
	}
	private void cargarDataClientes() {
		// paso1: limpiar tabla
		model.setRowCount(0);
		// paso2: Obtener el resultado del proceso de consulta a la tabla Usuarios
		ArrayList<Cliente> lista = gCli.listarClientes();
		// paso3: Validar y crear un bucle para el recorrido
		if(lista.size()==0){
		mensajeError("Lista vacía");
		}else{
			for(Cliente cli :lista){
			//Crer un arreglo
			Object fila[] = {cli.getCodigo(),cli.getNombre(),cli.getApellido()};
		// Añadir información a la tabla
		model.addRow(fila);
		}
		}
		
	}

	private void mensajeError(String msj) {
		JOptionPane.showMessageDialog(this, msj, "Error!!", 0);
		
	}

	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == okButton) {
			actionPerformedOkButton(arg0);
		}
	}
	protected void actionPerformedOkButton(ActionEvent arg0) {
		enviarDatos();
	}

	private void enviarDatos() {
		String cod,nom,ape;
		int fila;
		// paso1: Obtener el valor de la fila seleccionada
		fila = tbCliente.getSelectedRow();
		// paso 2:Obtener los datos de la fila seleecionada
		cod = tbCliente.getValueAt(fila, 0).toString();
		nom = tbCliente.getValueAt(fila, 1).toString();
		ape = tbCliente.getValueAt(fila, 2).toString();
		// paso3 : Enviar los datos obtenidos a las cajas de texto de FrmBoleta
		FrmBoleta.txtCodigo.setText(cod);
		FrmBoleta.txtNombre.setText(nom);
		FrmBoleta.txtApellido.setText(ape);
		// cerrar ventana
		this.dispose();
		
	}
}
